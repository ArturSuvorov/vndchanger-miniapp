import React, { useState, useEffect } from 'react';

const VNDChangerApp = () => {
  const [exchangeType, setExchangeType] = useState('crypto');
  const [amount, setAmount] = useState('');
  const [targetCurrency, setTargetCurrency] = useState('VND');
  const [calculated, setCalculated] = useState(null);
  const [rates, setRates] = useState({});
  const [courierData, setCourierData] = useState({ name: '', phone: '', address: '' });

  const directions = {
    crypto: ['VND', 'USD', 'RUB'],
    card_rub: ['VND', 'USD'],
    cash: ['VND'],
    vnd: ['RUB', 'USD', 'Crypto']
  };

  useEffect(() => {
    fetch(`https://vndchanger.onrender.com/rates/${exchangeType}`)
      .then(res => res.json())
      .then(data => setRates(data))
      .catch(err => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤:', err));
  }, [exchangeType]);

  const handleCalculate = () => {
    const rate = rates[targetCurrency];
    if (!rate || isNaN(parseFloat(amount))) return;
    const result = parseFloat(amount) * rate;
    setCalculated(result.toFixed(0));
  };

  const handleCourierRequest = () => {
    alert(`–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n–ò–º—è: ${courierData.name}\n–¢–µ–ª: ${courierData.phone}\n–ê–¥—Ä–µ—Å: ${courierData.address}`);
    setCourierData({ name: '', phone: '', address: '' });
  };

  return (
    <div style={{ padding: 20, fontFamily: 'Arial, sans-serif' }}>
      <h2>üí± VNDChanger</h2>

      <label>–¢–∏–ø –æ–±–º–µ–Ω–∞:</label>
      <select value={exchangeType} onChange={e => setExchangeType(e.target.value)}>
        <option value="crypto">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</option>
        <option value="card_rub">–ö–∞—Ä—Ç–∞ –†–§ (–†—É–±–ª–∏)</option>
        <option value="cash">–ù–∞–ª–∏—á–Ω—ã–µ RUB/USD</option>
        <option value="vnd">–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–µ –¥–æ–Ω–≥–∏</option>
      </select>

      <br /><br />

      <label>–°—É–º–º–∞:</label>
      <input type="number" value={amount} onChange={e => setAmount(e.target.value)} />

      <br /><br />

      <label>–ü–æ–ª—É—á–∏—Ç—å –≤–∞–ª—é—Ç—É:</label>
      <select value={targetCurrency} onChange={e => setTargetCurrency(e.target.value)}>
        {directions[exchangeType].map(cur => (
          <option key={cur} value={cur}>{cur}</option>
        ))}
      </select>

      <br /><br />
      <button onClick={handleCalculate}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>

      {calculated && (
        <p>–í—ã –ø–æ–ª—É—á–∏—Ç–µ: <strong>{calculated} {targetCurrency}</strong></p>
      )}

      <hr />

      <h4>üöö –í—ã–∑–≤–∞—Ç—å –∫—É—Ä—å–µ—Ä–∞</h4>
      <input
        placeholder="–ò–º—è"
        value={courierData.name}
        onChange={e => setCourierData({ ...courierData, name: e.target.value })}
      /><br />
      <input
        placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
        value={courierData.phone}
        onChange={e => setCourierData({ ...courierData, phone: e.target.value })}
      /><br />
      <input
        placeholder="–ê–¥—Ä–µ—Å"
        value={courierData.address}
        onChange={e => setCourierData({ ...courierData, address: e.target.value })}
      /><br /><br />
      <button onClick={handleCourierRequest}>üì¶ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
    </div>
  );
};

export default VNDChangerApp;
